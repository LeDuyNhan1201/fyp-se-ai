x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"

services:
  # --------- Kafka UI ---------
  smartcv-kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: smartcv-kafka-ui
    logging: *logging
    restart: always
    depends_on:
      smartcv-kafka1:
        condition: service_healthy
      smartcv-schemaregistry:
        condition: service_healthy
    ports:
      - 8080:8080
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080 || exit 1
      interval: 5s
      retries: 10
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: smartcv-kafka1:19091
      KAFKA_CLUSTERS_0_METRICS_PORT: 9991
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://smartcv-schemaregistry:8085
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - smartcv-network

  # --------- PgAdmin ---------
  smartcv-pgadmin:
    image: dpage/pgadmin4:latest
    container_name: smartcv-pgadmin
    logging: *logging
    restart: always
    depends_on:
      smartcv-postgres:
        condition: service_healthy
    ports:
      - 5050:80
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost || exit 1
      interval: 5s
      retries: 10
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    networks:
      - smartcv-network

  # --------- Mongo Express ---------
  smartcv-express:
    image: mongo-express:latest
    container_name: smartcv-express
    logging: *logging
    restart: always
    depends_on:
      smartcv-mongodb:
        condition: service_healthy
    ports:
      - 5051:8081
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8081 || exit 1
      interval: 5s
      retries: 10
    environment:
      ME_CONFIG_BASICAUTH: false
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD_ENCODED}@smartcv-mongodb:27017/
    networks:
      - smartcv-network

  # --------- Redis Insight ---------
  smartcv-redis-insight:
    image: redis/redisinsight:latest
    container_name: smartcv-redis-insight
    logging: *logging
    restart: always
    depends_on:
      smartcv-redis:
        condition: service_healthy
    ports:
      - 5540:5540
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5540 || exit 1
      interval: 5s
      retries: 10
    networks:
      - smartcv-network

  # --------- Kibana ---------
  smartcv-kibana:
    image: kibana:8.16.5
    container_name: smartcv-kibana
    logging: *logging
    restart: always
    depends_on:
      smartcv-elasticsearch:
        condition: service_healthy
    ports:
      - 5601:5601
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5601 || exit 1
      interval: 5s
      retries: 10
    environment:
      ELASTICSEARCH_HOSTS: http://smartcv-elasticsearch:9200
      xpack.security.enabled: false
      xpack.reporting.roles.enabled: false
    networks:
      - smartcv-network
