server:
  port: 30003
  servlet:
    context-path: /notification
    encoding:
      charset: UTF-8
      enabled: true
      force: true
      force-request: true
      force-response: true

# --------- AXON ---------
axon:
  event-bus-name: smartcv-event-store
  metrics:
    auto-configuration:
      enabled: true
    micrometer:
      dimensional: true

# --------- METRICS & MONITORING ---------
management:
  info:
    git:
      enabled: true
      mode: full

  endpoint:
    metrics:
      access: read_only
    prometheus:
      access: read_only
    health:
      show-details: always

  endpoints:
    web:
      base-path: /actuator
      exposure:
        include:
          - health
          - info
          - metrics
          - prometheus

  prometheus:
    metrics:
      export:
        enabled: true

  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
    tags:
      application: ${spring.application.name}

  observations:
    key-values:
      application: ${spring.application.name}

  tracing:
    sampling:
      probability: 1.0

# --------- SPRING CONFIGS ---------
spring:
  application:
    name: notification

  data:
    mongodb:
      uri: mongodb://smartcv:SmArTcV123%23@localhost:27017/axon-framework?authSource=admin

  kafka:
    bootstrap-servers: localhost:9092,localhost:9092,localhost:9092
    properties:
      schema.registry.url: http://localhost:8085
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer
      auto-offset-reset: latest
      enable-auto-commit: false