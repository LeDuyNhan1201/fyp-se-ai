 plugins {
	id 'java-library'
	id 'com.google.protobuf' version "${googleProtobufVersion}"  
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	/* --------- Normal Dependencies --------- */
	compileOnly 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation "org.axonframework:axon-micrometer:${axonVersion}" // https://mvnrepository.com/artifact/org.axonframework/axon-micrometer
	implementation "org.axonframework:axon-tracing-opentelemetry:${axonVersion}" // https://mvnrepository.com/artifact/org.axonframework/axon-tracing-opentelemetry
	implementation "org.axonframework.extensions.mongo:axon-mongo:${axonMongoVersion}" // https://mvnrepository.com/artifact/org.axonframework.extensions.mongo/axon-mongo
	implementation "org.axonframework.extensions.mongo:axon-mongo-spring:${axonMongoVersion}" // https://mvnrepository.com/artifact/org.axonframework.extensions.mongo/axon-mongo-spring
	implementation "com.graphql-java:graphql-java-extended-scalars:${graphqlScalarsVersion}" // https://mvnrepository.com/artifact/com.graphql-java/graphql-java-extended-scalars
	implementation "org.apache.poi:poi:${apachePoiVersion}" // https://mvnrepository.com/artifact/org.apache.poi/poi
	implementation "org.apache.poi:poi-ooxml:${apachePoiVersion}" // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml

	/* --------- APIs Dependencies --------- */
	api 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	api 'org.springframework.boot:spring-boot-starter-validation'
	api 'org.springframework.boot:spring-boot-starter-web'
	api 'org.springframework.boot:spring-boot-starter-data-mongodb'
	api 'org.springframework.boot:spring-boot-starter-data-redis'
	api 'org.springframework.grpc:spring-grpc-spring-boot-starter'
	api 'org.springframework.boot:spring-boot-starter-graphql'
	api 'org.springframework.kafka:spring-kafka'
	api 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
	api 'io.grpc:grpc-services'
	api "redis.clients:jedis:${jedisVersion}" // https://mvnrepository.com/artifact/redis.clients/jedis
	api "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocOpenApiVersion}" // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
	api "org.axonframework:axon-spring-boot-starter:${axonVersion}" // https://mvnrepository.com/artifact/org.axonframework/axon-spring-boot-starter
	api "io.confluent:kafka-schema-registry-client:${confluentVersion}" // https://mvnrepository.com/artifact/io.confluent/kafka-schema-registry-client
	api "io.confluent:kafka-protobuf-serializer:${confluentVersion}" // https://mvnrepository.com/artifact/io.confluent/kafka-avro-serializer
	api 'io.micrometer:micrometer-tracing-bridge-otel'
	api 'io.opentelemetry:opentelemetry-exporter-otlp'
	api 'io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter'
	api "net.datafaker:datafaker:${dataFakerVersion}" // https://mvnrepository.com/artifact/net.datafaker/datafaker

}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {
				option 'jakarta_omit'
				option '@generated=omit'
			}
		}
	}
}

sourceSets {
	main {
		proto {
			srcDir 'src/main/protobuf'
		}
	}
}

java {
	withSourcesJar() // Tạo file sources.jar để có thể import code
}
