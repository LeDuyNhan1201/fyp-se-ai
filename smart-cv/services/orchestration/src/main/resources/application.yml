server:
  port: 30005
  servlet:
    context-path: /orchestration

# --------- Axon ---------
axon:
  event-bus-name: smartcv-event-bus
  metrics:
    auto-configuration:
      enabled: true
    micrometer:
      dimensional: true

# --------- Eureka ---------
eureka:
  instance:
    hostname: ${DISCOVERY_DOMAIN:localhost}

  client:
    service-url:
      defaultZone: http://${eureka.instance.hostname}:${DISCOVERY_PORT:31000}/eureka/

# --------- Metrics & Monitoring ---------
otel:
  instrumentation:
    common:
      default-enabled: false  # Tắt toàn bộ mặc định, chọn lọc bật từng cái
    jdbc:
      enabled: false
    spring-web:
      enabled: false
    spring-webmvc:
      enabled: false
    logback-appender:
      enabled: true
    logback-mdc:
      enabled: true
    micrometer:
      enabled: true  # Bật để gửi metrics qua Prometheus
    kafka:
      enabled: true
    mongo:
      enabled: true
    r2dbc:
      enabled: false

management:
  opentelemetry:
    resource-attributes:
      service.name: ${spring.application.name}
      cluster: local

  otlp:
    tracing:
      endpoint: ${OTLP_ENDPOINT:http://localhost:4318}/v1/traces
    metrics:
      export:
        endpoint: ${OTLP_ENDPOINT:http://localhost:4318}/v1/metrics
        step: 5s

  info:
    git:
      enabled: true
      mode: full

  endpoint:
    metrics:
      access: read_only
    prometheus:
      access: read_only
    health:
      show-details: always

  endpoints:
    web:
      base-path: /actuator
      exposure:
        include:
          - health
          - info
          - metrics
          - prometheus

  prometheus:
    metrics:
      export:
        enabled: true

  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
    tags:
      application: ${spring.application.name}

  observations:
    annotations:
      enabled: true
    key-values:
      application: ${spring.application.name}

  tracing:
    enabled: true
    sampling:
      probability: 1.0

# --------- Logging ---------
logging:
  pattern:
    correlation: "[${spring.application.name:}, %X{traceId:-}, %X{spanId:-}]"

# --------- Spring configs ---------
spring:
  config:
    import: file:env.properties

  application:
    name: orchestration

  data:
    mongodb:
      axon:
        uri: ${MONGODB_URI}

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9091}
    properties:
      schema.registry.url: ${SCHEMA_REGISTRY_URL:http://localhost:8085}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer
      auto-offset-reset: latest
      enable-auto-commit: false